openapi: 3.0.0
info:
  title: 'Laravel Dockyard : REST API (v1)'
  description: |
    **Laravel Dockyard REST API v1** provides comprehensive access to all the functionality available in the Laravel Dockyard platform.
    This API allows authentication, user management, role management, permission management, and content creation.

    **Authentication Overview:**
    - Use the `/api/v1/auth/login` endpoint to authenticate a user and obtain a JWT token for accessing protected resources.
    - The JWT token should be included in the `Authorization` header as `Bearer <JWT_TOKEN>` in subsequent requests.
    - If the token expires, the `/api/v1/auth/refresh` endpoint allows refreshing the token.
    - Logging out via `/api/v1/auth/logout` invalidates the current session's JWT token.

    **Security Requirements:**
    - Authentication via JWT is required for most of the protected endpoints. The token should be included as a `Bearer` token in the `Authorization` header.
    - Some endpoints may require specific roles or permissions. If a user does not have sufficient privileges, the request will be rejected with a `403 Forbidden` error.

    **Pagination and Rate-Limiting:**
    - Endpoints that return a list of resources (such as users or posts) support pagination using `page` and `limit` query parameters.
    - The API enforces rate limiting, with information provided via response headers like `X-Rate-Limit`.

  version: 1.0.0
servers:
  - url: http://web.test

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    noauthAuth:
      type: http
      scheme: noauth

  responses:
    Unauthorized:
      description: Unauthorized - Authentication failed or token expired
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized. Invalid email/password or expired token."
    Forbidden:
      description: Forbidden - Insufficient permissions to access this resource
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Forbidden. You do not have permission to access this resource."
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Resource not found."
    BadRequest:
      description: Bad request due to invalid or missing fields
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Bad request. Missing or invalid parameters."
    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Rate limit exceeded. Please try again later."

  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: >-
            The JWT token returned after successful authentication. This token must be included as a Bearer token for future requests.
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_in:
          type: integer
          description: >-
            The number of seconds until the token expires. After this time, the user will need to refresh the token.
          example: 3600

security:
  - bearerAuth: []
paths:
  /api/v1/auth/login:
    post:
      tags:
        - default
      summary: Login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email address of the user attempting to log in. Example:
                    'admin@mail.com'.
                  example: admin@mail.com
                password:
                  type: string
                  description: >-
                    The password associated with the provided email. Example:
                    'password'.
                  example: password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/register:
    post:
      tags:
        - default
      summary: Register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The full name of the user being registered. Example:
                    'TestUser'.
                  example: TestUser
                password:
                  type: string
                  description: 'The password for the user. Example: ''password''.'
                  example: password
                email:
                  type: string
                  description: 'The email address of the user. Example: ''user3@mail.com''.'
                  example: user3@mail.com
                role_id:
                  type: integer
                  description: 'The ID of the role to be assigned to the user. Example: ''4''.'
                  example: '4'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/refresh:
    post:
      tags:
        - default
      summary: Refresh
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user requesting the token refresh.
                  example: admin@mail.com
                password:
                  type: string
                  description: The password of the user requesting the token refresh.
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/logout:
    post:
      tags:
        - default
      summary: Logout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email address of the user logging out. Example:
                    'admin@mail.com'.
                  example: admin@mail.com
                password:
                  type: string
                  description: >-
                    The password associated with the provided email. Example:
                    'password'.
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/users:
    get:
      tags:
        - default
      summary: List Users
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/permissions:
    post:
      tags:
        - default
      summary: Add Permission
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the permission. Example: ''Share''.'
                  example: Share
                slug:
                  type: string
                  description: >-
                    The slug for the permission, used for URL routing. Example:
                    'share'.
                  example: share
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: List Permissions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/roles:
    post:
      tags:
        - default
      summary: Add Role
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role being created. Example: ''Editor''.'
                  example: Editor
                slug:
                  type: string
                  description: >-
                    The slug for the role, used for URL routing. Example:
                    'editor'.
                  example: editor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/roles/1:
    get:
      tags:
        - default
      summary: Show Role Without Permissions
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/posts:
    post:
      tags:
        - default
      summary: Delete Post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: >-
                    The title of the post to be deleted. Example: 'my blog
                    title'.
                  example: my blog title
                content:
                  type: string
                  description: >-
                    The content of the post to be deleted. Example: 'Content
                    goes here'.
                  example: Content goes here
                external_id:
                  type: string
                  description: >-
                    An external ID or reference URL associated with the post to
                    be deleted. Example: 'https://domain.com/page1'.
                  example: https://domain.com/page1
                user_id:
                  type: integer
                  description: >-
                    The user ID associated with the post to be deleted. Example:
                    '1'.
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Indicates that the response should be in JSON format.
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: List Posts
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  